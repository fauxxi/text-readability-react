{"version":3,"sources":["components/Home.js","components/Main.js","App.js","serviceWorker.js","index.js","assets/education.svg"],"names":["Home","react_default","a","createElement","className","role","aria-label","react_router_dom","to","src","graphic","alt","Main","_useState","useState","_useState2","Object","slicedToArray","inputText","setText","_useState3","_useState4","result","setResult","data","text","ref_id","language","target_group","console","log","lib_default","autoFocus","value","onChange","e","target","fetch","method","mode","body","JSON","stringify","then","response","overall_score","style","background","border","outline","fontSize","resize","width","padding","placeholder","About","App","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f70f237b.chunk.js","sourcesContent":["import React from 'react';\n// eslint-disable-next-line\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport './Home.css';\nimport graphic from '../assets/education.svg';\n\nfunction Home() {\n  return (\n    <section className=\"hero is-light is-fullheight\">\n      <div className=\"hero-head \">\n        <nav\n          className=\"navbar \"\n          role=\"navigation\"\n          aria-label=\"dropdown navigation\"\n        >\n          <div className=\"navbar-item is-hoverable\">\n            <h1 className=\"has-text-weight-bold\">Text-Readability</h1>\n          </div>\n          {/* <div class=\"navbar-item field\">\n            <label for=\"switchRoundedDefault\">Dark mode: </label>\n            <input\n              id=\"switchRoundedDefault\"\n              type=\"checkbox\"\n              name=\"switchRoundedDefault\"\n              class=\"switch is-rounded\"\n            />\n          </div> */}\n        </nav>\n      </div>\n      <div className=\"hero-body test\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <h2 className=\"has-text-weight-bold is-size-1-desktop\">\n                How complex is your german?\n              </h2>\n              <h3>\n                designed to indicate how difficult a passage in German is to\n                understand.\n              </h3>\n              <br />\n              <div className=\"button is-primary is-medium\">\n                <Link className=\"has-text-white\" to=\"/app/\">\n                  Try it now!\n                </Link>\n              </div>\n            </div>\n            <div className=\"column\">\n              <img src={graphic} alt=\"illustration\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-footer\">\n        <p>\n          <Link to=\"/impressum/\">Impressum</Link> | Copyrights © 2019\n        </p>\n      </div>\n    </section>\n  );\n}\n\nexport default Home;\n","import React, { useState } from 'react';\n// eslint-disable-next-line\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\n// eslint-disable-next-line\nimport { Editor, EditorState, Modifier } from 'draft-js';\n//import Textarea from 'react-expanding-textarea';\nimport TextareaAutosize from 'react-autosize-textarea';\n\nfunction Main() {\n  const [inputText, setText] = useState('');\n  const [result, setResult] = useState('Waiting for text input');\n\n  let url = `http://tc.qu.tu-berlin.de/api/v1/readability-models/rfk1/predict`;\n  //url += encodeURI(inputText);\n\n  let data = {\n    text: inputText,\n    ref_id: 'Testsss',\n    language: 'DE',\n    target_group: 'B1'\n  };\n\n  const handleChange = e => {\n    setText(e.target.value);\n    fetch(url, {\n      method: 'POST',\n      mode: 'no-cors',\n      // headers: {\n      //   'Access-Control-Allow-Origin': '*'\n      // }\n      body: JSON.stringify({\n        text: inputText,\n        ref_id: 'Testsss',\n        language: 'DE',\n        target_group: 'B1'\n      })\n    }).then(response => {\n      console.log('Response: ', response);\n      setResult(response.overall_score);\n      console.log('Result:', result);\n    });\n  };\n\n  // const calculateResult = val => {\n  //   var output = '';\n  //   switch (true) {\n  //     case val < 30 && val > 0:\n  //       output =\n  //         'Level: College graduate | Very hard to read. Best understood by university graduates.';\n  //       break;\n  //     case val >= 30 && val < 50:\n  //       output = 'Level: College | Difficult to read.';\n  //       break;\n  //     case val >= 50 && val < 60:\n  //       output = 'Level: 10th & 12th grade | Fairly difficult to read.';\n  //       break;\n  //     case val >= 60 && val < 70:\n  //       output = 'Level: 8th & 9th grade | Plain English.';\n  //       break;\n  //     case val >= 70 && val < 80:\n  //       output = 'Level: 7th grade | Fairly easy to read.';\n  //       break;\n  //     case val >= 80 && val < 90:\n  //       output = 'Level: 6th grade | Easy to read.';\n  //       break;\n  //     case val >= 90 && val <= 100:\n  //       output = 'Level: 5th grade | Very easy to read.';\n  //       break;\n  //     case val > 100:\n  //       output = 'Text is too easy to read.';\n  //       break;\n  //     default:\n  //       output = 'Text is unreadable.';\n  //   }\n  //   return output;\n  // };\n\n  // let url = `https://ipeirotis-readability-metrics.p.rapidapi.com/getReadabilityMetrics?text=`;\n  // url += encodeURI(inputText);\n\n  console.log(data);\n\n  return (\n    <section className=\"hero is-light is-fullheight\">\n      <div className=\"hero-bead\">\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"navigation\">\n          <div className=\"navbar-item is-hoverable\">\n            <h1 className=\"has-text-weight-bold \">\n              <Link className=\"has-text-primary\" to=\"/\">\n                Text-Readability\n              </Link>\n            </h1>\n          </div>\n        </nav>\n      </div>\n      <div className=\"hero-body test\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column \">\n              {/* <Editor\n                className=\"title\"\n                editorState={editorTitleState}\n                onChange={editorTitleState => setEditorTitle(editorTitleState)}\n                placeholder={'Type your title'}\n                blockStyleFn={myBlockStyleFn}\n              /> */}\n\n              <TextareaAutosize\n                autoFocus={true}\n                className=\"\"\n                value={inputText}\n                onChange={handleChange}\n                style={{\n                  background: 'white',\n                  border: 'none',\n                  outline: 'none',\n                  fontSize: 20,\n                  resize: 'none',\n                  width: '100%',\n                  padding: '10px'\n                }}\n                placeholder={'Type your text here.'}\n              />\n            </div>\n            <div className=\"column\">\n              <h1 className=\"has-text-weight-bold\">Bewertung: </h1>\n              <p>{result}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-footer\">\n        <p>\n          <Link to=\"/impressum/\">Impressum</Link> | Copyrights © 2019\n        </p>\n      </div>\n    </section>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport './App.css';\nimport Home from './components/Home';\nimport Main from './components/Main';\n// import Test from './components/Test';\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/about/\" component={About} />\n        <Route path=\"/app/\" component={Main} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/education.8f70d488.svg\";"],"sourceRoot":""}