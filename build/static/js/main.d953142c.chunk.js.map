{"version":3,"sources":["assets/education.svg","assets/Logo_QUL_long.png","components/Home.js","components/Main.js","components/Impressum.js","components/Api.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","role","aria-label","src","qul","style","width","height","alt","react_router_dom","to","graphic","href","target","rel","Main","_useState","useState","_useState2","Object","slicedToArray","inputText","setText","_useState3","_useState4","result","setResult","useEffect","document","getElementById","classList","remove","val","spanx","marginLeft","position","top","left","concat","parseFloat","color","fontSize","zIndex","barStyle","marginTop","backgroundColor","lib_default","autoFocus","rows","value","onChange","e","background","border","outline","resize","padding","placeholder","id","onClick","add","fetch","method","mode","body","JSON","stringify","text","ref_id","language","target_group","then","response","json","console","log","overall_score","catch","error","paddingLeft","stle","right","Impressum","minHeight","marginBottom","title","React","Component","Api","textAlign","marginRight","App","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d953142c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/education.8f70d488.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo_QUL_long.97a8e1b7.png\";","import React from 'react';\n// eslint-disable-next-line\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport './Home.css';\nimport graphic from '../assets/education.svg';\nimport qul from '../assets/Logo_QUL_long.png';\n\nfunction Home() {\n  return (\n    <section className=\"hero is-light is-fullheight\">\n      <div className=\"hero-head \">\n        <nav\n          className=\"navbar\"\n          role=\"navigation\"\n          aria-label=\"dropdown navigation\"\n        >\n          <div className=\"navbar-start\">\n            <div className=\"navbar-item is-hoverable\">\n              <h1 className=\"has-text-weight-bold\">Text-Readability</h1>\n            </div>\n          </div>\n          <div className=\"navbar-end\">\n            <img\n              src={qul}\n              style={{ width: '20%', height: '100%' }}\n              alt=\"QUL logo\"\n            />\n          </div>\n          {/* <div class=\"navbar-item field\">\n            <label for=\"switchRoundedDefault\">Dark mode: </label>\n            <input\n              id=\"switchRoundedDefault\"\n              type=\"checkbox\"\n              name=\"switchRoundedDefault\"\n              class=\"switch is-rounded\"\n            />\n          </div> */}\n        </nav>\n      </div>\n      <div className=\"hero-body test\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <h2 className=\"has-text-weight-bold is-size-1-desktop\">\n                How complex is your german?\n              </h2>\n              <h3>\n                designed to indicate how difficult a passage in German is to\n                understand.\n              </h3>\n              <br />\n              <div className=\"button is-primary is-medium\">\n                <Link className=\"has-text-white\" to=\"/app/\">\n                  Try it now!\n                </Link>\n              </div>\n            </div>\n            <div className=\"column\">\n              <img src={graphic} alt=\"illustration\" />\n            </div>\n          </div>\n          <br />\n          <br />\n          <div>\n            <h1 className=\"has-text-weight-bold is-size-1-desktop has-text-centered\">\n              About This Project\n            </h1>\n            <p className=\"has-text-centered\">\n              This Website is created in the context of the course “Projekt\n              Medienerstellung” (Project on developing media) at Technische\n              Universität Berlin in 2019. It uses an API (application\n              programming interface) made by{' '}\n              <a\n                className=\"has-text-primary\"\n                href=\"https://www.qu.tu-berlin.de/menue/qu/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Quality and Usability Lab\n              </a>\n              .\n            </p>\n            <p className=\"has-text-centered\">\n              The text input will be categorized automatically. As it is very\n              easy to use, you can focus on improving the readability of your\n              text.\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-footer\">\n        <p>\n          <Link to=\"/impressum/\">Impressum</Link> |{' '}\n          <Link to=\"/api/\">About the API</Link> | Copyrights © 2019\n        </p>\n      </div>\n    </section>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\n// eslint-disable-next-line\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\n// eslint-disable-next-line\nimport { Editor, EditorState, Modifier } from 'draft-js';\n//import Textarea from 'react-expanding-textarea';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport qul from '../assets/Logo_QUL_long.png';\nimport './Main.css';\n// eslint-disable-next-line\nimport * as animationData from '../assets/loader2.json';\n// eslint-disable-next-line\nimport Lottie from 'react-lottie';\n\nfunction Main() {\n  const [inputText, setText] = useState('');\n  const [result, setResult] = useState('Waiting for user input...'); // \"Waiting for user input...\"\n\n  useEffect(() => {\n    document.getElementById('button-check').classList.remove('is-loading');\n  });\n\n  let url = `http://tc.qu.tu-berlin.de/api/v1/readability-models/rfk1/predict`;\n  //url += encodeURI(inputText);\n\n  // eslint-disable-next-line\n  let data = {\n    text: inputText,\n    ref_id: 'Testsss',\n    language: 'DE',\n    target_group: 'B1'\n  };\n\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  const check = () => {\n    document.getElementById('button-check').classList.add('is-loading');\n    fetch(url, {\n      method: 'POST',\n      mode: 'no-cors',\n      // headers: {\n      //   'Access-Control-Allow-Origin': '*'\n      // }\n      body: JSON.stringify({\n        text: inputText,\n        ref_id: 'Testsss',\n        language: 'DE',\n        target_group: 'B1'\n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        console.log('Response: ', response);\n        setResult(response.overall_score);\n        console.log('Result:', result);\n      })\n      .catch(function(error) {\n        //Handle error\n        console.log(error);\n      });\n  };\n\n  const resultDesc = val => {\n    if (val >= 0 && val <= 1) {\n      return '- This passage is very easy to understand, and has no complexity whatsoever regarding readability.';\n    } else if (val > 1 && val <= 2) {\n      return '- This passage is still easy to understand, but it has a little more complexity regarding it’s content.';\n    } else if (val > 2 && val <= 3) {\n      return '- This passage might be harder, but still easy enough to understand, it has more complex elements.';\n    } else if (val > 3 && val <= 4) {\n      return '- The content of this passage might be difficult to understand, it’s fairly complex in terms of readability.';\n    } else if (val > 4 && val <= 5) {\n      return '- This passage is fairly hard to understand and contains difficult phrases, which might slow down readability.';\n    } else if (val > 5 && val <= 6) {\n      return '- This passage is hard to understand and has a high degree of difficulty in it, you might want to try to break it down to improve readability.';\n    } else if (val > 6 && val <= 7) {\n      return '- This passage is very hard to understand and has a high difficulty in it’s content, advising to rephrase it to ease up the readability.';\n    } else if (val === 'Waiting for user input...') {\n      return '';\n    } else {\n      return '- Something is wrong. Try input text again.';\n    }\n  };\n\n  const span = {\n    margin: 1,\n    position: 'relative',\n    top: 0,\n    left: 0,\n    color: '#000',\n    zIndex: 1000\n  };\n\n  const spanx = {\n    marginLeft: -7,\n    position: 'absolute',\n    top: -30,\n    left: `${(result === 'Waiting for text input...'\n      ? 0\n      : (parseFloat(result) + -1) / 6) * 100}%`,\n    color: '#000',\n    fontSize: '2em',\n    zIndex: 1000\n  };\n\n  const barStyle = {\n    marginLeft: `${-0 * 100}%`,\n    marginTop: 20,\n    width: '100%',\n    height: 30,\n    backgroundColor: '#fff',\n    position: 'relative'\n  };\n\n  return (\n    <section className=\"hero is-light is-fullheight\">\n      <div className=\"hero-bead\">\n        <nav\n          className=\"navbar\"\n          role=\"navigation\"\n          aria-label=\"dropdown navigation\"\n        >\n          <div className=\"navbar-start\">\n            <div className=\"navbar-item is-hoverable\">\n              <h1 className=\"has-text-weight-bold\">\n                <Link className=\"has-text-primary\" to=\"/\">\n                  Text-Readability\n                </Link>\n              </h1>\n            </div>\n          </div>\n          <div className=\"navbar-end\">\n            <img\n              src={qul}\n              style={{ width: '20%', height: '100%' }}\n              alt=\"QUL logo\"\n            />\n          </div>\n          {/* <div class=\"navbar-item field\">\n            <label for=\"switchRoundedDefault\">Dark mode: </label>\n            <input\n              id=\"switchRoundedDefault\"\n              type=\"checkbox\"\n              name=\"switchRoundedDefault\"\n              class=\"switch is-rounded\"\n            />\n          </div> */}\n        </nav>\n      </div>\n      <div className=\"hero-body test\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column \">\n              <TextareaAutosize\n                autoFocus={true}\n                rows={10}\n                className=\"\"\n                value={inputText}\n                onChange={handleChange}\n                style={{\n                  background: 'white',\n                  border: 'none',\n                  outline: 'none',\n                  fontSize: 20,\n                  resize: 'none',\n                  width: '100%',\n                  padding: '10px'\n                }}\n                placeholder={'Type your text here.'}\n              />\n\n              <button\n                id=\"button-check\"\n                className=\"button is-primary has-text-weight-bold\"\n                onClick={check}\n              >\n                Check\n              </button>\n            </div>\n            <div className=\"column\">\n              <h1 className=\"has-text-weight-bold\">Rating: </h1>\n\n              <p className=\"\">{`${result} ${resultDesc(result)}`}</p>\n              <div className=\"bar\" style={barStyle}>\n                <span className=\"has-text-weight-bold\" style={spanx}>\n                  x\n                </span>\n                <div style={{ height: 30 }}>\n                  <table\n                    style={{\n                      width: '100%',\n                      backgroundColor: 'yellow'\n                    }}\n                  >\n                    <thead\n                      style={{\n                        width: `${(1 / 6) * 100}%`,\n                        height: 30,\n                        backgroundColor: '#66bc7b'\n                      }}\n                    >\n                      <tr>\n                        <th\n                          style={{\n                            width: `${(1 / 6) * 100}%`,\n                            paddingLeft: 5,\n                            height: 30,\n                            backgroundColor: '#66bc7b'\n                          }}\n                        >\n                          1\n                        </th>\n                        <th\n                          style={{\n                            width: `${(1 / 6) * 100}%`,\n                            paddingLeft: 5,\n                            backgroundColor: '#95ce7d'\n                          }}\n                        >\n                          2\n                        </th>\n                        <th\n                          style={{\n                            width: `${(1 / 6) * 100}%`,\n                            paddingLeft: 5,\n                            backgroundColor: '#cdde78'\n                          }}\n                        >\n                          3\n                        </th>\n                        <th\n                          style={{\n                            width: `${(1 / 6) * 100}%`,\n                            paddingLeft: 5,\n                            backgroundColor: '#ffe985'\n                          }}\n                        >\n                          4\n                        </th>\n                        <th\n                          style={{\n                            width: `${(1 / 6) * 100}%`,\n                            paddingLeft: 5,\n                            backgroundColor: '#fcbe81'\n                          }}\n                        >\n                          5\n                        </th>\n                        <th\n                          style={{\n                            width: `${(1 / 6) * 100}%`,\n                            paddingLeft: 5,\n                            backgroundColor: '#fc9572'\n                          }}\n                        >\n                          6\n                        </th>\n                      </tr>\n                    </thead>\n                  </table>\n                </div>\n\n                <div stle={{ position: 'absolute' }}>\n                  <p style={{ position: 'absolute', top: 40 }}>Sehr Einfach</p>\n                  <p style={{ position: 'absolute', top: 40, right: 0 }}>\n                    Sehr Komplex\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-footer\">\n        <p>\n          <Link to=\"/impressum/\">Impressum</Link> |{' '}\n          <Link to=\"/api/\">About the API</Link> | Copyrights © 2019\n        </p>\n      </div>\n    </section>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n// eslint-disable-next-line\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport qul from '../assets/Logo_QUL_long.png';\n\nclass Impressum extends React.Component {\n  render() {\n    return (\n      <section className=\"hero is-light is-fullheight\">\n        <div className=\"hero-head \">\n          <nav\n            className=\"navbar\"\n            role=\"navigation\"\n            aria-label=\"dropdown navigation\"\n          >\n            <div className=\"navbar-start\">\n              <div className=\"navbar-item is-hoverable\">\n                <h1 className=\"has-text-weight-bold\">\n                  <Link className=\"has-text-primary\" to=\"/\">\n                    Text-Readability\n                  </Link>\n                </h1>\n              </div>\n            </div>\n            <div className=\"navbar-end\">\n              <img\n                src={qul}\n                style={{ width: '20%', height: '100%' }}\n                alt=\"QUL logo\"\n              />\n            </div>\n            {/* <div class=\"navbar-item field\">\n            <label for=\"switchRoundedDefault\">Dark mode: </label>\n            <input\n              id=\"switchRoundedDefault\"\n              type=\"checkbox\"\n              name=\"switchRoundedDefault\"\n              class=\"switch is-rounded\"\n            />\n          </div> */}\n          </nav>\n        </div>\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\" style={{ minHeight: '50vh' }}>\n              <div className=\"column\">\n                <h1\n                  className=\"has-text-weight-bold is-size-3-desktop\"\n                  style={{ marginBottom: 40 }}\n                >\n                  Impressum\n                </h1>\n                <p className=\"has-text-weight-bold\">\n                  Quality and Usability Lab\n                </p>\n                <p>Innovation Laboratories</p>\n                <p>Ernst Reuter Platz 7, 10587 Berlin</p>\n                <br />\n                <p>\n                  <b>Project Manager:</b>\n                </p>\n                <p>Dr.-Ing. Babak Naderi</p>\n                <p>\n                  <span>&#9993;</span> babak.naderi@tu-berlin.de\n                </p>\n              </div>\n              <div className=\"column\">\n                <iframe\n                  title=\"google-maps\"\n                  style={{ height: '100%', width: '100%' }}\n                  src=\"https://maps.google.com/maps?q=telekom%20berlin%20ernst%20reuter&t=&z=15&ie=UTF8&iwloc=&output=embed\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"hero-footer\">\n          <p>\n            <Link to=\"/impressum/\">Impressum</Link> |{' '}\n            <Link to=\"/api/\">About the API</Link> | Copyrights © 2019\n          </p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Impressum;\n","import React from 'react';\n// eslint-disable-next-line\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport qul from '../assets/Logo_QUL_long.png';\n\nclass Api extends React.Component {\n  render() {\n    return (\n      <section className=\"hero is-light is-fullheight\">\n        <div className=\"hero-head \">\n          <nav\n            className=\"navbar\"\n            role=\"navigation\"\n            aria-label=\"dropdown navigation\"\n          >\n            <div className=\"navbar-start\">\n              <div className=\"navbar-item is-hoverable\">\n                <h1 className=\"has-text-weight-bold\">\n                  <Link className=\"has-text-primary\" to=\"/\">\n                    Text-Readability\n                  </Link>\n                </h1>\n              </div>\n            </div>\n            <div className=\"navbar-end\">\n              <img\n                src={qul}\n                style={{ width: '20%', height: '100%' }}\n                alt=\"QUL logo\"\n              />\n            </div>\n          </nav>\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column\">\n                <h1\n                  className=\"has-text-weight-bold\"\n                  style={{ textAlign: 'center', marginTop: '5vh' }}\n                >\n                  {' '}\n                  About the API\n                </h1>\n\n                <p\n                  style={{\n                    marginTop: '5vh',\n                    textAlign: 'justify',\n                    marginLeft: 20,\n                    marginRight: 20\n                  }}\n                >\n                  The API operates on a seven-level readability corpus, which\n                  was developed by people learning German as a second language\n                  on A and B level. The API scans for user inputs and calculates\n                  the „Mean Opinion Score“ in short MOS, which directly shows\n                  the user the readability of the scanned text in the range of\n                  1-7.\n                </p>\n\n                <br />\n                <p\n                  style={{\n                    textAlign: 'justify',\n                    marginLeft: 20,\n                    marginRight: 20\n                  }}\n                >\n                  The 3 biggest features of the German language, with focus on\n                  text readability are the following: traditional, lexical and\n                  morphological features. The latter has the biggest impact for\n                  second language learners, because of its complexity.\n                  Traditional features set the base line for text readability\n                  classification and builds upon the following 6 features:\n                  average length of sentence average number of words per\n                  sentence sentence length number of syllables per sentence the\n                  “Fleisch-Kincaid score” average word length Lexical features\n                  are based on the vocabulary properties and most of them are\n                  used to assess readability for second language learners, some\n                  of them are: number of adjectives number of pronouns lexical\n                  diversity ratio of total number of verbs to adverbs\n                  Morphological features are important, because they have a huge\n                  impact on text readability for second language learners. A\n                  combination of “German finite state morphology (SMOR)” and\n                  “conditional random fields (clevertagger)” are used in this\n                  API. Some features are: pronominal adverbs preposition used to\n                  introduce infinite clause adjective used as noun interrogative\n                  adverbs.\n                </p>\n                <br />\n                <p\n                  style={{\n                    textAlign: 'justify',\n                    marginBottom: 20,\n                    marginLeft: 20,\n                    marginRight: 20\n                  }}\n                >\n                  Mainly 20 features are being used to calculate the Mean\n                  Opinion Score for text readability and they are tested against\n                  each other to see how accurate they are. Text readability is\n                  calculated by using linear regression, support vector\n                  regression, polynomial regression and random forest\n                  regression. Additionally, the API is using the “Root Mean\n                  Square Error (RMSE)”, to measure the deviation of predicted\n                  values from actual values, while predicting errors which come\n                  by combining traditional, lexical and morphological features\n                  to measure the performance of the algorithm to rate the\n                  readability.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"hero-footer\">\n          <p>\n            <Link to=\"/impressum/\">Impressum</Link> |{' '}\n            <Link to=\"/api/\">About the API</Link> | Copyrights © 2019\n          </p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Api;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport './App.css';\nimport Home from './components/Home';\nimport Main from './components/Main';\nimport Impressum from './components/Impressum';\nimport Api from './components/Api';\n// import Test from './components/Test';\n\n// function About() {\n//   return <h2>About</h2>;\n// }\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/impressum/\" component={Impressum} />\n        <Route path=\"/api/\" component={Api} />\n        <Route path=\"/app/\" component={Main} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}